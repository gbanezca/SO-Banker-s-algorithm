/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gbanezca
 */
public class Entrada extends javax.swing.JFrame {

    //variables de la interfaz
    boolean automatico; //variable de llenado de datos
    int columnas; // nro de columnas de la matriz
    int filas; // nro de filas de la matriz
    ArrayList<String> guardacol = new ArrayList<String>(); //array para guardar nuevos cargos ingresados por el usuario
    ArrayList<String> guardafil = new ArrayList<String>(); //array para guardar nuevas sucursales ingresadas por el usuario
    public static Consola consola; //variable para poder editar nuestra interfaz consola
    boolean guardado;
    
    //constructor
    public Entrada() {
        initComponents();
        setLocationRelativeTo(null);
        consola = new Consola(); 
        guardado = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        visual = new javax.swing.JButton();
        original = new javax.swing.JCheckBox();
        expansion = new javax.swing.JCheckBox();
        filas_nuevas = new javax.swing.JTextField();
        col_nuevas = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        guardar = new javax.swing.JButton();
        opcionAuto = new javax.swing.JCheckBox();
        opcionManual = new javax.swing.JCheckBox();
        ayuda = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        visual.setText("Ir a visualizador");
        visual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visualActionPerformed(evt);
            }
        });
        getContentPane().add(visual, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 351, 400, -1));

        original.setText("Original");
        original.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                originalActionPerformed(evt);
            }
        });
        getContentPane().add(original, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, -1, -1));

        expansion.setText("Expansión");
        expansion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expansionActionPerformed(evt);
            }
        });
        getContentPane().add(expansion, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, -1, -1));

        filas_nuevas.setEnabled(false);
        getContentPane().add(filas_nuevas, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 130, 50, -1));

        col_nuevas.setEnabled(false);
        getContentPane().add(col_nuevas, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 100, 50, -1));

        jLabel1.setText("Nuevas sucursales");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 130, -1, -1));

        jLabel2.setText("Nuevos cargos");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, -1, -1));

        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });
        getContentPane().add(guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 160, -1, 20));

        opcionAuto.setText("Automático");
        opcionAuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionAutoActionPerformed(evt);
            }
        });
        getContentPane().add(opcionAuto, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 240, -1, -1));

        opcionManual.setText("Manual");
        opcionManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionManualActionPerformed(evt);
            }
        });
        getContentPane().add(opcionManual, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 270, -1, -1));

        ayuda.setText("?");
        ayuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ayudaActionPerformed(evt);
            }
        });
        getContentPane().add(ayuda, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Configuraciones.png"))); // NOI18N
        jLabel3.setText("jLabel3");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 410));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void visualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visualActionPerformed
        
        //aqui verificamos que las configuraciones se hayan realizado antes de inicializar el visualizador
        if ((original.isSelected() || expansion.isSelected()) && (opcionAuto.isSelected() || opcionManual.isSelected())) {
            
            //En el caso de dimensiones
            
            //original
            if (original.isSelected()) {
                original();
                //En caso del llenado automatico o manual, se pasa por parametro con el boolean automatico
                new Ventana(guardafil, guardacol, automatico).setVisible(true);
                new Entrada().setVisible(false);
            } else {
                
                //extension
                if ("".equals(col_nuevas.getText()) && "".equals(filas_nuevas.getText())) {
                    
                    JOptionPane.showMessageDialog(null, "Por favor indique las cantidades solicitadas en al menos una casilla");
                    
                } else if (!"".equals(col_nuevas.getText()) && !"".equals(filas_nuevas.getText()) && !guardado){
                    
                    JOptionPane.showMessageDialog(null, "Presione el boton de guardado");
                    
                } else {
                    
                    original();//se considera las matrices originales de 6x6 y se le añaden columnas o filas como se requiera
                    for (int i = 0; i < columnas; i++) {

                        String response = JOptionPane.showInputDialog(null, "Ingrese el cargo " + (i + 6));
                        System.out.println(response);
                        Entrada.consola.areaConsola.setText(Entrada.consola.areaConsola.getText() + "\n" + response);

                        if ((response != null) && (response.length() > 0)) {
                            
                            guardacol.add("" + response);
                            System.out.println(guardacol.size());
                            Entrada.consola.areaConsola.setText(Entrada.consola.areaConsola.getText() + "\n" + guardacol.size());
                        }
                    }
                    for (int i = 0; i < filas; i++) {
                        columnas += 6;
                        String response = JOptionPane.showInputDialog(null, "Ingrese ubicacion de la nueva sucursal " + (i + 6), "");
                        if ((response != null) && (response.length() > 0)) {
                            guardafil.add("" + response);
                        }
                    }

                    new Entrada().setVisible(false);
                    //En caso del llenado automatico o manual, se pasa por parametro con el boolean automatico
                    new Ventana(guardafil, guardacol, automatico).setVisible(true);

                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Siga los paso de configuración, elija al menos una opcion por cada paso",
                    "ERROR", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_visualActionPerformed

    //Aca se hace el llenado de los arraylist con los valores originales de la matriz 6x6
    //Estos arraylist son utiles porque si el usuario quiere aumentar las matrices, los nuevos valores se siguen añadiendo
    //Luego se convierten los arraylist a vectores string para que los jtable de la interfaz ventana admita los datos 
    public void original() {
        guardacol.add("Cajeros");
        guardacol.add("Seguridad");
        guardacol.add("Empaquetamiento");
        guardacol.add("Limpieza");
        guardacol.add("Gerencia");
        guardacol.add("Abastecimiento");

        guardafil.add("Maracuay");
        guardafil.add("Vizcaya");
        guardafil.add("Las Mercedes");
        guardafil.add("Santa Paula");
        guardafil.add("Chuao");
        guardafil.add("Caurimare");

    }

    //Verificaciones de interfaz entrada con respecto a los checkbox 
    private void originalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_originalActionPerformed
        if (original.isSelected()) {
            expansion.setSelected(false);
            JOptionPane.showMessageDialog(null, "Opción: Original\nInicializa matriz 6x6");

            col_nuevas.setEnabled(false);
            filas_nuevas.setEnabled(false);
        }
    }//GEN-LAST:event_originalActionPerformed

    //Verificaciones de interfaz entrada con respecto a los checkbox 
    private void expansionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expansionActionPerformed
        if (expansion.isSelected()) {
            original.setSelected(false);
            col_nuevas.setEnabled(true);
            filas_nuevas.setEnabled(true);

        }
    }//GEN-LAST:event_expansionActionPerformed

    //Verificaciones de interfaz entrada con respecto a las casillas de texto donde 
    //se ingresa las cantidades de nuevas sucursales o cargos 
    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed

        String aux;
        try {
            if(expansion.isSelected()){
                if ("".equals(col_nuevas.getText()) && "".equals(filas_nuevas.getText())) {
                    JOptionPane.showMessageDialog(null, "Por favor indique las cantidades solicitadas en al menos una casilla");
                } else if ("".equals(col_nuevas.getText())) {
                    aux = "Inicializar matriz 6x" + (6 + Integer.parseInt(filas_nuevas.getText()));
                    JOptionPane.showMessageDialog(null, aux);
                    filas = Integer.parseInt(filas_nuevas.getText());
                } else if ("".equals(filas_nuevas.getText())) {
                    aux = "Inicializar matriz " + (6 + Integer.parseInt(col_nuevas.getText())) + "x6";
                    JOptionPane.showMessageDialog(null, aux);
                    columnas = Integer.parseInt(col_nuevas.getText());
                } else {
                    aux = "Inicializar matriz " + (6 + Integer.parseInt(col_nuevas.getText())) + "x" + (6 + Integer.parseInt(filas_nuevas.getText()));
                    JOptionPane.showMessageDialog(null, aux);
                    filas = Integer.parseInt(filas_nuevas.getText());
                    columnas = Integer.parseInt(col_nuevas.getText());
                }
                guardado = true;
            } else {
                JOptionPane.showMessageDialog(null, "Seleccione la opcion expansion para poder guardar");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Valor invalido detectado",
                    "ERROR", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_guardarActionPerformed
    
    //Segun el usuario la carga de datos puede ser automatica o manual, esto afecta el boolean automatico
    private void opcionAutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionAutoActionPerformed
        if(opcionAuto.isSelected()){
            opcionManual.setSelected(false);
            automatico = true;
        }
        
    }//GEN-LAST:event_opcionAutoActionPerformed
    

    //Segun el usuario la carga de datos puede ser automatica o manual, esto afecta el boolean automatico
    private void opcionManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionManualActionPerformed
        if(opcionManual.isSelected()){
            opcionAuto.setSelected(false);
            automatico = false;
        }
       
    }//GEN-LAST:event_opcionManualActionPerformed

    //JOption que guia al usuario sobre cualquier duda de las configuraciones 
    private void ayudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ayudaActionPerformed
        JOptionPane.showMessageDialog(null, "Bienvenidos a las configuraciones del simulador del algoritmo del banquero"
                + "\nPor favor siga los pasos correspondientes:"
                + "\n\n - PASO 1 seleccione las dimensiones de las matrices a utilizar en el simulador"
                + "\n\n       Original: inicializa matrices 6x6 con los cargos y sucursales predeterminados"
                + "\n       Expansión: inicializa matrices mayores, para ello el usuario debe indicar la "
                + "\n                  cantidad nuevos cargos y nuevas sucursales"
                + "\n\n IMPORTANTE: si eligue la opción expansión, luego de ingresar los datos presione *Guardar*"
                + "\n\n PASO 2 seleccione el manejo de la carga de data"
                + "\n\n       Automático: llenará por usted la cantidad de empleados por categoría en cada tabla"
                + "\n       Manual: inicializa las matrices en valor 0 para que usted las modifique manualmente"
                + "\n\n IMPORTANTE: si eligue la opción automático, luego de podra editar los datos automáticos manualmente"
                + "\n\nGracias por preferir nuestros servicios! "
                + "\nATT: Simuladores GAMA");
    }//GEN-LAST:event_ayudaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Entrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Entrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Entrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Entrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Entrada().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ayuda;
    private javax.swing.JTextField col_nuevas;
    private javax.swing.JCheckBox expansion;
    private javax.swing.JTextField filas_nuevas;
    private javax.swing.JButton guardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JCheckBox opcionAuto;
    private javax.swing.JCheckBox opcionManual;
    private javax.swing.JCheckBox original;
    private javax.swing.JButton visual;
    // End of variables declaration//GEN-END:variables
}
